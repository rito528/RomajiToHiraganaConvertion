[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\rito\AppData\Local\Temp\idea1893.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\rito\AppData\Local\Temp\idea1893.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.1 (Amazon.com Inc. Java 16.0.2)
[debug]       Load.loadUnit: plugins took 98.2676ms
[debug]       Load.loadUnit: defsScala took 0.2964ms
[debug] [Loading] Scanning directory C:\Users\rito\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\rito\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 24.2891 ms
[debug]           Load.resolveProject(global-plugins) took 50.3271ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\rito\.sbt\1.0\plugins, plugins: List(<none>))) took 98.5288ms
[debug] [Loading] Done in C:\Users\rito\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 121.1181ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2769ms
[debug]     Load.loadUnit(file:/C:/Users/rito/.sbt/1.0/plugins/, ...) took 230.0174ms
[debug]   Load.apply: load took 407.78ms
[debug]   Load.apply: resolveProjects took 5.7662ms
[debug]   Load.apply: finalTransforms took 72.6068ms
[debug]   Load.apply: config.delegates took 13.5771ms
[debug]   Load.apply: Def.make(settings)... took 618.9502ms
[debug]   Load.apply: structureIndex took 175.0521ms
[debug]   Load.apply: mkStreams took 5.6615ms
[info] loading global plugins from C:\Users\rito\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3439.2101ms
[debug]           Load.loadUnit: plugins took 27.1712ms
[debug]           Load.loadUnit: defsScala took 0.0048ms
[debug] [Loading] Scanning directory D:\rito\desktop\Develop\RomajiToHiraganaConvertion\project
[debug]             Load.loadUnit: mkEval took 5.9107ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\rito\desktop\Develop\RomajiToHiraganaConvertion\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.5444 ms
[info] loading settings for project romajitohiraganaconvertion-build from idea1893.sbt ...
[debug]               Load.resolveProject(romajitohiraganaconvertion-build) took 11.5672ms
[debug]             Load.loadTransitive: finalizeProject(Project(id romajitohiraganaconvertion-build, base: D:\rito\desktop\Develop\RomajiToHiraganaConvertion\project, plugins: List(<none>))) took 14.904ms
[debug] [Loading] Done in D:\rito\desktop\Develop\RomajiToHiraganaConvertion\project, returning: (romajitohiraganaconvertion-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 142.5139ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.1582ms
[debug]         Load.loadUnit(file:/D:/rito/desktop/Develop/RomajiToHiraganaConvertion/project/, ...) took 175.937ms
[debug]       Load.apply: load took 178.0366ms
[debug]       Load.apply: resolveProjects took 0.1082ms
[debug]       Load.apply: finalTransforms took 10.7713ms
[debug]       Load.apply: config.delegates took 0.4745ms
[debug]       Load.apply: Def.make(settings)... took 94.7577ms
[debug]       Load.apply: structureIndex took 44.4898ms
[debug]       Load.apply: mkStreams took 0.0039ms
[info] loading project definition from D:\rito\desktop\Develop\RomajiToHiraganaConvertion\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 1868.4489ms
[debug]     Load.loadUnit: defsScala took 0.0043ms
[debug] [Loading] Scanning directory D:\rito\desktop\Develop\RomajiToHiraganaConvertion
[debug]       Load.loadUnit: mkEval took 0.3629ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\rito\desktop\Develop\RomajiToHiraganaConvertion, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 7.0193 ms
[info] loading settings for project romajitohiraganaconvertion from build.sbt ...
[debug]         Load.resolveProject(romajitohiraganaconvertion) took 53.5097ms
[debug]       Load.loadTransitive: finalizeProject(Project(id romajitohiraganaconvertion, base: D:\rito\desktop\Develop\RomajiToHiraganaConvertion, plugins: List(<none>))) took 63.1254ms
[debug] [Loading] Done in D:\rito\desktop\Develop\RomajiToHiraganaConvertion, returning: (romajitohiraganaconvertion)
[debug]     Load.loadUnit: loadedProjectsRaw took 3772.3448ms
[debug]     Load.loadUnit: cleanEvalClasses took 30.382ms
[debug]   Load.loadUnit(file:/D:/rito/desktop/Develop/RomajiToHiraganaConvertion/, ...) took 5673.0943ms
[debug] Load.apply: load took 5679.2569ms
[debug] Load.apply: resolveProjects took 0.8859ms
[debug] Load.apply: finalTransforms took 50.9332ms
[debug] Load.apply: config.delegates took 0.8272ms
[debug] Load.apply: Def.make(settings)... took 107.4022ms
[debug] Load.apply: structureIndex took 36.9019ms
[debug] Load.apply: mkStreams took 0.0033ms
[info] set current project to romajitohiraganaconvertion (in build file:/D:/rito/desktop/Develop/RomajiToHiraganaConvertion/)
[warn] there's a key that's not used by any other settings/tasks:
[warn]  
[warn] * ThisBuild / name
[warn]   +- D:\rito\desktop\Develop\RomajiToHiraganaConvertion\build.sbt:1
[warn]  
[warn] note: a setting might still be used by a command; to exclude a key from this `lintUnused` check
[warn] either append it to `Global / excludeLintKeys` or call .withRank(KeyRanks.Invisible) on the key
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60010 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60010, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to romajitohiraganaconvertion (in build file:/D:/rito/desktop/Develop/RomajiToHiraganaConvertion/)
[debug] > Exec(idea-shell, None, None)
