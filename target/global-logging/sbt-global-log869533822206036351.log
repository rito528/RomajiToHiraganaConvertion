[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\rito\AppData\Local\Temp\idea1924.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\rito\AppData\Local\Temp\idea1924.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.1 (Amazon.com Inc. Java 16.0.2)
[debug]       Load.loadUnit: plugins took 103.3872ms
[debug]       Load.loadUnit: defsScala took 0.2693ms
[debug] [Loading] Scanning directory C:\Users\rito\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\rito\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.3407 ms
[debug]           Load.resolveProject(global-plugins) took 42.3605ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\rito\.sbt\1.0\plugins, plugins: List(<none>))) took 81.6461ms
[debug] [Loading] Done in C:\Users\rito\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 101.7074ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.255ms
[debug]     Load.loadUnit(file:/C:/Users/rito/.sbt/1.0/plugins/, ...) took 215.4498ms
[debug]   Load.apply: load took 388.6948ms
[debug]   Load.apply: resolveProjects took 5.5728ms
[debug]   Load.apply: finalTransforms took 73.5795ms
[debug]   Load.apply: config.delegates took 12.6805ms
[debug]   Load.apply: Def.make(settings)... took 589.5404ms
[debug]   Load.apply: structureIndex took 173.1317ms
[debug]   Load.apply: mkStreams took 4.8919ms
[info] loading global plugins from C:\Users\rito\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3394.8369ms
[debug]           Load.loadUnit: plugins took 30.4718ms
[debug]           Load.loadUnit: defsScala took 0.0046ms
[debug] [Loading] Scanning directory D:\rito\desktop\Develop\RomajiToHiraganaConvertion\project
[debug]             Load.loadUnit: mkEval took 5.5279ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\rito\desktop\Develop\RomajiToHiraganaConvertion\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.8976 ms
[info] loading settings for project romajitohiraganaconvertion-build from idea1924.sbt ...
[debug]               Load.resolveProject(romajitohiraganaconvertion-build) took 2.9885ms
[debug]             Load.loadTransitive: finalizeProject(Project(id romajitohiraganaconvertion-build, base: D:\rito\desktop\Develop\RomajiToHiraganaConvertion\project, plugins: List(<none>))) took 6.729ms
[debug] [Loading] Done in D:\rito\desktop\Develop\RomajiToHiraganaConvertion\project, returning: (romajitohiraganaconvertion-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 136.6261ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.5337ms
[debug]         Load.loadUnit(file:/D:/rito/desktop/Develop/RomajiToHiraganaConvertion/project/, ...) took 173.7341ms
[debug]       Load.apply: load took 175.4557ms
[debug]       Load.apply: resolveProjects took 0.1285ms
[debug]       Load.apply: finalTransforms took 11.8415ms
[debug]       Load.apply: config.delegates took 0.8048ms
[debug]       Load.apply: Def.make(settings)... took 99.112ms
[debug]       Load.apply: structureIndex took 42.4979ms
[debug]       Load.apply: mkStreams took 0.0032ms
[info] loading project definition from D:\rito\desktop\Develop\RomajiToHiraganaConvertion\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 1777.0528ms
[debug]     Load.loadUnit: defsScala took 0.0036ms
[debug] [Loading] Scanning directory D:\rito\desktop\Develop\RomajiToHiraganaConvertion
[debug]       Load.loadUnit: mkEval took 0.303ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\rito\desktop\Develop\RomajiToHiraganaConvertion, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.9071 ms
[info] loading settings for project romajitohiraganaconvertion from build.sbt ...
[debug]         Load.resolveProject(romajitohiraganaconvertion) took 76.4947ms
[debug]       Load.loadTransitive: finalizeProject(Project(id romajitohiraganaconvertion, base: D:\rito\desktop\Develop\RomajiToHiraganaConvertion, plugins: List(<none>))) took 84.2035ms
[debug] [Loading] Done in D:\rito\desktop\Develop\RomajiToHiraganaConvertion, returning: (romajitohiraganaconvertion)
[debug]     Load.loadUnit: loadedProjectsRaw took 3601.0323ms
[debug]     Load.loadUnit: cleanEvalClasses took 28.536ms
[debug]   Load.loadUnit(file:/D:/rito/desktop/Develop/RomajiToHiraganaConvertion/, ...) took 5407.8497ms
[debug] Load.apply: load took 5410.4514ms
[debug] Load.apply: resolveProjects took 0.4014ms
[debug] Load.apply: finalTransforms took 54.3196ms
[debug] Load.apply: config.delegates took 0.4712ms
[debug] Load.apply: Def.make(settings)... took 92.8952ms
[debug] Load.apply: structureIndex took 36.4893ms
[debug] Load.apply: mkStreams took 0.0043ms
[info] set current project to romajitohiraganaconvertion (in build file:/D:/rito/desktop/Develop/RomajiToHiraganaConvertion/)
[warn] there's a key that's not used by any other settings/tasks:
[warn]  
[warn] * ThisBuild / name
[warn]   +- D:\rito\desktop\Develop\RomajiToHiraganaConvertion\build.sbt:1
[warn]  
[warn] note: a setting might still be used by a command; to exclude a key from this `lintUnused` check
[warn] either append it to `Global / excludeLintKeys` or call .withRank(KeyRanks.Invisible) on the key
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60010 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60010, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to romajitohiraganaconvertion (in build file:/D:/rito/desktop/Develop/RomajiToHiraganaConvertion/)
[debug] > Exec(idea-shell, None, None)
